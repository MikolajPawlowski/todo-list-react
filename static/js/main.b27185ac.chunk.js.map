{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","className","type","placeholder","Tasks","tasks","hideDoneTasks","map","task","done","content","id","Buttons","length","Fragment","disabled","every","Section","title","body","extraHeaderContent","Header","Container","children","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAWeA,EATF,kBACT,sBAAMC,UAAU,OAAhB,SACI,2BAAUA,UAAU,iBAApB,UACI,uBAAOA,UAAU,cAAcC,KAAK,OAAOC,YAAY,0BACvD,wBAAQF,UAAU,eAAlB,iCCwBGG,G,MA5BD,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,cAAT,OACV,oBAAIL,UAAU,gBAAd,SACKI,EAAME,KAAI,SAAAC,GAAI,OACX,qBAEIP,UAAS,oBAAeO,EAAKC,MAAQH,EAC3B,sBACA,IAJd,UAOI,wBAAQL,UAAU,wCAAlB,SACKO,EAAKC,KAAO,SAAM,KAGvB,sBAAMR,UAAS,oBACEO,EAAKC,KAAO,oBAAsB,IADnD,SAGKD,EAAKE,UAGV,wBAAQT,UAAU,oCAAlB,kCAhBKO,EAAKG,WCgBXC,G,MAnBC,SAAC,GAAD,IAAGP,EAAH,EAAGA,MAAOC,EAAV,EAAUA,cAAV,OACZ,qBAAKL,UAAU,mBAAf,SACKI,EAAMQ,OAAS,GACZ,eAAC,IAAMC,SAAP,WACI,wBAAQb,UAAU,kBAAlB,SACKK,EAAgB,4BAAoB,yBAEzC,wBACIL,UAAU,kBACVc,SAAUV,EAAMW,OAAM,qBAAGP,QAF7B,0CCEDQ,G,MAVC,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,KAAMC,EAAf,EAAeA,mBAAf,OACZ,0BAASnB,UAAU,UAAnB,UACI,yBAAQA,UAAU,kBAAlB,UACE,oBAAIA,UAAU,iBAAd,SAAgCiB,IAC/BE,KAEFD,OCFME,EANA,SAAC,GAAD,IAAEH,EAAF,EAAEA,MAAF,OACX,iCACI,6BAAKA,OCMEI,G,MANG,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAF,OACd,sBAAMtB,UAAU,YAAhB,SACKsB,MCGHlB,EAAQ,CACZ,CAAEM,GAAI,EAAGD,QAAS,8BAAqBD,MAAM,GAC7C,CAAEE,GAAI,EAAGD,QAAS,wBAAeD,MAAM,IAyB1Be,MApBf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAQN,MAAM,qBACd,cAAC,EAAD,CACEA,MAAM,qBACNC,KAAM,cAAC,EAAD,MAGR,cAAC,EAAD,CACED,MAAM,mBACNC,KAAM,cAAC,EAAD,CAAOd,MAAOA,EAAOC,cAbb,QAcdc,mBAAoB,cAAC,EAAD,CAASf,MAAOA,EAAOC,cAd7B,cCAPmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b27185ac.chunk.js","sourcesContent":["import \"./style.css\";\r\n\r\nconst Form = () => (\r\n    <form className=\"form\">\r\n        <fieldset className=\"form__fieldset\">\r\n            <input className=\"form__input\" type=\"text\" placeholder=\"Co jest do zrobienia?\" />\r\n            <button className=\"form__button\">Dodaj zadanie</button>\r\n        </fieldset>\r\n    </form>\r\n)\r\n\r\nexport default Form;","import \"./style.css\";\r\n\r\nconst Tasks = ({tasks, hideDoneTasks}) => (\r\n    <ul className=\"section__list\">\r\n        {tasks.map(task => (\r\n            <li\r\n                key={task.id}\r\n                className={`list__item${task.done && hideDoneTasks\r\n                        ? \" list__item--hidden\"\r\n                        : \"\"}`\r\n                }\r\n            >\r\n                <button className=\"list__button list__button--toggleDone\">\r\n                    {task.done ? \"‚úì\" : \"\"}\r\n                </button>\r\n\r\n                <span className={\r\n                    `list__span${task.done ? \" list__span--done\" : \"\"}`\r\n                    }>\r\n                    {task.content}\r\n                </span>\r\n\r\n                <button className=\"list__button list__button--remove\">\r\n                    üóëÔ∏è\r\n              </button>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nexport default Tasks;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Buttons = ({ tasks, hideDoneTasks }) => (\r\n    <div className=\"section__buttons\">\r\n        {tasks.length > 0 && (\r\n            <React.Fragment>\r\n                <button className=\"section__button\">\r\n                    {hideDoneTasks ? \"Poka≈º uko≈Ñczone\" : \"Ukryj uko≈Ñczone\"}\r\n                </button>\r\n                <button\r\n                    className=\"section__button\"\r\n                    disabled={tasks.every(({ done }) => done)}\r\n                >\r\n                    Uko≈Ñcz wszystkie\r\n                </button>\r\n            </React.Fragment>\r\n        )}\r\n    </div>\r\n\r\n);\r\n\r\nexport default Buttons;","import \"./style.css\";\r\n\r\nconst Section = ({title, body, extraHeaderContent}) => (\r\n    <section className=\"section\">\r\n        <header className=\"section__header\">\r\n          <h2 className=\"section__title\">{title}</h2>\r\n          {extraHeaderContent}\r\n        </header>\r\n        {body}\r\n      </section>\r\n);\r\n\r\nexport default Section;","const Header = ({title}) => (\r\n    <header>\r\n        <h1>{title}</h1>\r\n      </header>\r\n);\r\n\r\nexport default Header;","import \"./style.css\";\r\n\r\nconst Container = ({children}) => (\r\n    <main className=\"container\">\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\n\nconst tasks = [\n  { id: 1, content: \"przej≈õƒá na Reacta\", done: false },\n  { id: 2, content: \"zje≈õƒá obiad\", done: true },\n];\n\nconst hideDoneTasks = false;\n\nfunction App() {\n  return (\n    <Container>\n      <Header title=\"Lista zada≈Ñ\" />\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form />}\n      />\n\n      <Section\n        title=\"Lista zada≈Ñ\"\n        body={<Tasks tasks={tasks} hideDoneTasks={hideDoneTasks} />}\n        extraHeaderContent={<Buttons tasks={tasks} hideDoneTasks={hideDoneTasks} />}\n\n\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}